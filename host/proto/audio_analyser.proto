syntax = "proto3";

package audio_analyser.proto;

service AudioAnalyser {
  rpc SetWindowId(WindowId) returns (Void) {}
}

message Void {}

message WindowId {
  uint64 id = 1;
}

service AudioStreaming {
  rpc GetAudioStream(Void) returns (stream AudioBuffer) {}
  rpc GetMeterStream(Void) returns (stream MeterReading) {}
}

message AudioBuffer {
    repeated float samples = 1;
}

message MeterReading {
  float rms = 1;
  /* TODO
   * frequency
   * distortion
   * SNR
   * other types of meters
   */
}

service AudioGenerator {
  rpc GetGeneratorSettings(Void) returns (GeneratorSettings) {}
  rpc SetGeneratorSettings(GeneratorSettings) returns (Void) {}
}

message GeneratorSettings {
    /* Output level in peak level full scale. 0 is silence, 1 is full scale.  */
    float peak_level = 1;
    /* Output frequency in Hz. */
    float frequency = 2;
    /* When true, audio output is active, otherwise the output is silence */
    bool enabled = 3;
}
